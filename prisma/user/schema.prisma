generator client {
  provider = "prisma-client-js"
  output   = "./generated/UserDataClient"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL1")
}

model users {

  id          Int          @id @default(autoincrement()) @map("id")
  account     String       @unique @map("account") @db.VarChar(20)
  password    String       @map("password") 
  name        String       @map("name") @db.VarChar(20)
  cash        Int          @default(0)  @map("cash")
  created_at  DateTime     @default(now())  @map("created_at")
  
  inventory   inventory[]
  player_deck player_deck[]
  rank        rank?

  @@map("users")
}

model rank {

  id        Int    @id @default(autoincrement()) @map("id")
  user_id   Int    @unique @map("user_id")
  rankpoint Int    @map("rankpoint")
  rank      Int?   @map("rank")
  tier      String @map("tier") @db.VarChar(20)
  win       Int    @map("win")
  draw      Int    @map("draw")
  lose      Int    @map("lose")
  users     users  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("rank")
}

model inventory {
  id        Int   @id @default(autoincrement()) @map("id")
  user_id   Int   @map("user_id")
  player_id Int   @map("player_id")
  count     Int   @map("count")
  users     users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id], map: "inventory_user_id_fkey")
  @@map("inventory")
}

model player_deck {

  id        Int   @id @default(autoincrement()) @map("id")
  user_id   Int   @map("user_id")
  player_id Int   @map("player_id")
  users     users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("player_deck")
}